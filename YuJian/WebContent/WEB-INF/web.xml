<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd" id="WebApp_ID" version="3.1">
  <display-name>YuJian</display-name>
  
  <!-- log4j配置，文件路径，因为是跟随项目启动 -->
  <context-param>
  	<param-name>log4jConfigLocation</param-name>
  	<param-value>/WEB-INF/classes/log4j.properties</param-value>
  </context-param>

  <!-- 加载log4j配置文件 -->
  <listener>
  	<listener-class>
  		org.springframework.web.util.Log4jConfigListener
  	</listener-class>
  </listener>
  
  <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>/WEB-INF/config/spring*.xml</param-value>
        <!-- 默认是/WEB-INF/applicationContext.xml -->
  </context-param>
  
  <listener>
     <listener-class>
         org.springframework.web.context.ContextLoaderListener
     </listener-class>
  </listener>
  
  <context-param>
  	<param-name>webAppRootKey</param-name>
  	<param-value>yujian.root</param-value>
  </context-param>
  <!-- 编码过滤器 -->
  <filter>  
      <filter-name>characterEncodingFilter</filter-name>  
      <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>  
      <init-param>  
          <param-name>encoding</param-name>  
          <param-value>UTF-8</param-value>  
      </init-param>  
      <init-param>  
          <param-name>forceEncoding</param-name>  
          <param-value>true</param-value>  
      </init-param>  
  </filter>  
  <filter-mapping>  
      <filter-name>characterEncodingFilter</filter-name>  
      <url-pattern>/*</url-pattern>  
  </filter-mapping>
  
  <!-- 前端控制器 -->
  <servlet>
  	<servlet-name>springmvc</servlet-name>
  	<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
  	<!-- 加载springmvc配置 -->
  	<init-param>
  		<param-name>contextConfigLocation</param-name>
  		<!-- 配置文件的地址
  			如果不配置contextConfigLocation，
  			默认查找的配置文件名称classpath下的：servlet名称+"-serlvet.xml"即：springmvc-serlvet.xml
  		 -->
  		<param-value>/WEB-INF/config/spring*.xml</param-value>
  	</init-param>

  </servlet>
  
  <servlet-mapping>
  	<servlet-name>springmvc</servlet-name>
  	<!-- 
  	可以配置/ ，此工程 所有请求全部由springmvc解析，此种方式可以实现 RESTful方式，需要特殊处理对静态文件的解析不能由springmvc解析
  	可以配置*.do或*.action，所有请求的url扩展名为.do或.action由springmvc解析，此种方法常用 
  	不可以/*，如果配置/*，返回jsp也由springmvc解析，这是不对的。
  	
  	 -->
  	<url-pattern>/</url-pattern>
  </servlet-mapping>
  
  <servlet-mapping>  
    <servlet-name>default</servlet-name>  
    <url-pattern>*.html</url-pattern>  
  </servlet-mapping>  
  
  <welcome-file-list>
    <welcome-file>login.html</welcome-file>
  </welcome-file-list>
  
  <error-page>
	<error-code>404</error-code>
	<location>/404</location>
  </error-page>

  <error-page>
  	<error-code>500</error-code>
    <location>/500</location>
  </error-page>
</web-app>